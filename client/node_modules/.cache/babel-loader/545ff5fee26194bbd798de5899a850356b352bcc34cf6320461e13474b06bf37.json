{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Notes Maker\\\\client\\\\src\\\\components\\\\NoteList.js\";\n// components/NoteList.js\n\n// This component is designed to be used within a parent component that manages the state for notes and provides the onEditNote and onDeleteNote functions as props. The parent component would pass these as props to the NoteList component. \n\n// imports the React library, which is necessary for creating React components and using JSX (JavaScript XML).\nimport React from \"react\";\n\n// we declare a functional component named NoteList. It takes an object as a parameter, which is destructured to extract notes, onEditNote, and onDeleteNote. These are props passed to the component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  notes,\n  onEditNote,\n  onDeleteNote\n}) => {\n  // return statement contains JSX, which defines the UI structure of the component.\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: notes.map(note =>\n    /*#__PURE__*/\n    // This line maps over the notes array, creating a list item (<li>) for each note. The key attribute is set to note._id to ensure each list item has a unique identifier\n    _jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: note.title\n        // strong is used for bold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // in JSX we specifically make use of className instead of class because class is a reserved keyword in javascript\n        // className=\"button2\": Applies a CSS class named \"button2\" to style the button.\n        // In React (JSX), when you want to apply inline styles to an element, you need to use an object to define the styles. This requires the use of double curly braces. \n        // style={{ marginRight: \"15px\" }}: Adds inline styling to add a right margin of 15px to the button.\n        // onClick={() => onEditNote(...)}: An event handler that calls the onEditNote function when the button is clicked. It prompts the user for an updated title and content using the prompt function, passing the results along with the note's _id to onEditNote.\n        // prompt() function in JavaScript is used to display a dialog box that prompts the user to input a value. It returns the input value as a string.\n        // prompt() function is called with two optional arguments:\n\n        // message: A string that represents the text to display to the user in the dialog box.\n        // defaultValue: A string that represents the default value that appears in the input field (optional).\n        className: \"button2\",\n        style: {\n          marginRight: \"15px\"\n        },\n        onClick: () => onEditNote(note._id, prompt(\"Enter updated title:\", note.title), prompt(\"Enter updated content:\", note.content)),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // className=\"button2\": Applies a CSS class named \"button2\" to style the button.\n        // onClick={() => onDeleteNote(note._id)}: An event handler that calls the onDeleteNote function when the button is clicked, passing the note's _id.\n        className: \"button2\",\n        onClick: () => onDeleteNote(note._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, note._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NoteList","notes","onEditNote","onDeleteNote","children","map","note","title","fileName","_jsxFileName","lineNumber","columnNumber","content","className","style","marginRight","onClick","_id","prompt","_c","$RefreshReg$"],"sources":["D:/Projects/Notes Maker/client/src/components/NoteList.js"],"sourcesContent":["// components/NoteList.js\r\n\r\n// This component is designed to be used within a parent component that manages the state for notes and provides the onEditNote and onDeleteNote functions as props. The parent component would pass these as props to the NoteList component. \r\n \r\n// imports the React library, which is necessary for creating React components and using JSX (JavaScript XML).\r\nimport React from \"react\";\r\n \r\n// we declare a functional component named NoteList. It takes an object as a parameter, which is destructured to extract notes, onEditNote, and onDeleteNote. These are props passed to the component.\r\nconst NoteList = ({ notes, onEditNote, onDeleteNote }) => {\r\n    // return statement contains JSX, which defines the UI structure of the component.\r\n    return (\r\n        <ul>\r\n            {notes.map((note) => (\r\n                // This line maps over the notes array, creating a list item (<li>) for each note. The key attribute is set to note._id to ensure each list item has a unique identifier\r\n                <li key={note._id}>\r\n                    <strong>{note.title\r\n                    // strong is used for bold\r\n                    }</strong>\r\n                    <p>{note.content}</p>\r\n \r\n                    \r\n                    <button\r\n                    // in JSX we specifically make use of className instead of class because class is a reserved keyword in javascript\r\n                    // className=\"button2\": Applies a CSS class named \"button2\" to style the button.\r\n                    // In React (JSX), when you want to apply inline styles to an element, you need to use an object to define the styles. This requires the use of double curly braces. \r\n                    // style={{ marginRight: \"15px\" }}: Adds inline styling to add a right margin of 15px to the button.\r\n                    // onClick={() => onEditNote(...)}: An event handler that calls the onEditNote function when the button is clicked. It prompts the user for an updated title and content using the prompt function, passing the results along with the note's _id to onEditNote.\r\n                    // prompt() function in JavaScript is used to display a dialog box that prompts the user to input a value. It returns the input value as a string.\r\n                    // prompt() function is called with two optional arguments:\r\n\r\n                    // message: A string that represents the text to display to the user in the dialog box.\r\n                    // defaultValue: A string that represents the default value that appears in the input field (optional).\r\n                        className=\"button2\"\r\n                        style={{ marginRight: \"15px\" }}\r\n                        onClick={() =>\r\n                            onEditNote(\r\n                                note._id,\r\n                                prompt(\"Enter updated title:\", note.title),\r\n                                prompt(\"Enter updated content:\", note.content)\r\n                            )\r\n                        }\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                    <button\r\n                        // className=\"button2\": Applies a CSS class named \"button2\" to style the button.\r\n                        // onClick={() => onDeleteNote(note._id)}: An event handler that calls the onDeleteNote function when the button is clicked, passing the note's _id.\r\n                        className=\"button2\"\r\n                        onClick={() => onDeleteNote(note._id)}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n \r\nexport default NoteList;"],"mappings":";AAAA;;AAEA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EACtD;EACA,oBACIJ,OAAA;IAAAK,QAAA,EACKH,KAAK,CAACI,GAAG,CAAEC,IAAI;IAAA;IACZ;IACAP,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAAK,QAAA,EAASE,IAAI,CAACC;QACd;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eACVZ,OAAA;QAAAK,QAAA,EAAIE,IAAI,CAACM;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGrBZ,OAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACIc,SAAS,EAAC,SAAS;QACnBC,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAO,CAAE;QAC/BC,OAAO,EAAEA,CAAA,KACLd,UAAU,CACNI,IAAI,CAACW,GAAG,EACRC,MAAM,CAAC,sBAAsB,EAAEZ,IAAI,CAACC,KAAK,CAAC,EAC1CW,MAAM,CAAC,wBAAwB,EAAEZ,IAAI,CAACM,OAAO,CACjD,CACH;QAAAR,QAAA,EACJ;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTZ,OAAA;QACI;QACA;QACAc,SAAS,EAAC,SAAS;QACnBG,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACG,IAAI,CAACW,GAAG,CAAE;QAAAb,QAAA,EACzC;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GArCJL,IAAI,CAACW,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsCb,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACQ,EAAA,GAhDInB,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}